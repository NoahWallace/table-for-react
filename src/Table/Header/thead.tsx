import * as React from 'react'import {Row} from './row'import {IHeaderProps, ITableOptions} from "../table.d";export interface ITHeadProps {    headers: IHeaderProps[][];    options: ITableOptions;}export class THead extends React.Component<ITHeadProps, {}> {    setRows = (): JSX.Element[] => {        const {headers, options } = this.props;        return headers.map((row: IHeaderProps[], i) => {            return (                <Row key={`header_${i}_row`}                     row={row}                     options={options}                     rowIdx={i}                />)        })    };    setColgroup = () => {        const {headers } = this.props;        return headers[headers.length -1].map((cell)=>{            let span, className;            if(cell.options){                className=cell.options.colGroupClass || ""                span=cell.options.colSpan || 1            }            return <col span={span} className={className} />        })    };    render() {        return (            <React.Fragment>                <colgroup>                    {this.setColgroup()}                </colgroup>                <thead className="header">                {this.setRows()}                </thead>            </React.Fragment>        )    }}